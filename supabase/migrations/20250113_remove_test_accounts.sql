-- =====================================================
-- USUWANIE TESTOWYCH KONT I UTWORZENIE NOWEGO ADMINA
-- =====================================================
-- Ten skrypt usuwa stare testowe konta i tworzy nowe konto admina

-- =====================================================
-- KROK 1: USUWANIE TESTOWYCH KONT
-- =====================================================
-- UWAGA: To usunie wszystkie dane zwiƒÖzane z tymi kontami!

-- 1. Usu≈Ñ z tabeli employers (je≈õli istniejƒÖ)
DELETE FROM employers WHERE profile_id IN (
  SELECT id FROM profiles WHERE email IN (
    'employer@test.nl',
    'admin@zzp.nl',
    'worker@test.nl'
  )
);

-- 2. Usu≈Ñ z tabeli workers (je≈õli istniejƒÖ)
DELETE FROM workers WHERE profile_id IN (
  SELECT id FROM profiles WHERE email IN (
    'employer@test.nl',
    'admin@zzp.nl',
    'worker@test.nl'
  )
);

-- 3. Usu≈Ñ z tabeli profiles
DELETE FROM profiles WHERE email IN (
  'employer@test.nl',
  'admin@zzp.nl',
  'worker@test.nl'
);

-- 4. Usu≈Ñ z auth.users (Supabase Authentication)
-- UWAGA: To wymaga uprawnie≈Ñ administratora w Supabase
DELETE FROM auth.users WHERE email IN (
  'employer@test.nl',
  'admin@zzp.nl',
  'worker@test.nl'
);

-- =====================================================
-- KROK 2: UTWORZENIE NOWEGO KONTA ADMINA
-- =====================================================
-- Admin nie ma formularza rejestracji ze wzglƒôd√≥w bezpiecze≈Ñstwa
-- Musi byƒá utworzony rƒôcznie w bazie

-- OPCJA A: Przez Supabase Dashboard (ZALECANE)
-- 1. Przejd≈∫ do: Authentication ‚Üí Users
-- 2. Kliknij "Add user"
-- 3. Wype≈Çnij:
--    Email: admin@zzpwerkplaats.nl
--    Password: [silne has≈Ço - min 8 znak√≥w]
--    Auto Confirm User: TAK
-- 4. Kliknij "Create user"
-- 5. Skopiuj UUID u≈ºytkownika
-- 6. Uruchom poni≈ºsze SQL z tym UUID:

/*
-- Zamie≈Ñ 'USER_UUID_TUTAJ' na prawdziwy UUID z kroku 5
INSERT INTO profiles (id, email, full_name, role, created_at)
VALUES (
  'USER_UUID_TUTAJ'::uuid,
  'admin@zzpwerkplaats.nl',
  'Administrator',
  'admin',
  NOW()
);
*/

-- OPCJA B: Przez SQL (je≈õli masz dostƒôp do auth schema)
-- UWAGA: Wymaga funkcji serwerowych i mo≈ºe nie dzia≈Çaƒá w SQL Editor

-- Funkcja pomocnicza do tworzenia konta admina
CREATE OR REPLACE FUNCTION create_admin_account(
  admin_email TEXT,
  admin_password TEXT,
  admin_name TEXT
) RETURNS UUID AS $$
DECLARE
  new_user_id UUID;
  encrypted_password TEXT;
BEGIN
  -- Generuj UUID dla nowego u≈ºytkownika
  new_user_id := gen_random_uuid();
  
  -- Hash has≈Ça (Supabase u≈ºywa bcrypt)
  encrypted_password := crypt(admin_password, gen_salt('bf'));
  
  -- Utw√≥rz u≈ºytkownika w auth.users
  INSERT INTO auth.users (
    id,
    instance_id,
    email,
    encrypted_password,
    email_confirmed_at,
    created_at,
    updated_at,
    role,
    aud
  ) VALUES (
    new_user_id,
    '00000000-0000-0000-0000-000000000000',
    admin_email,
    encrypted_password,
    NOW(),
    NOW(),
    NOW(),
    'authenticated',
    'authenticated'
  );
  
  -- Utw√≥rz profil
  INSERT INTO profiles (id, email, full_name, role, created_at)
  VALUES (new_user_id, admin_email, admin_name, 'admin', NOW());
  
  RETURN new_user_id;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- U≈ºycie funkcji (odkomentuj i zmie≈Ñ dane):
/*
SELECT create_admin_account(
  'admin@zzpwerkplaats.nl',  -- email
  'Admin2025!SecurePass',     -- has≈Ço (ZMIE≈É!)
  'Administrator Systemu'     -- imiƒô
);
*/

-- =====================================================
-- WERYFIKACJA
-- =====================================================

-- Sprawd≈∫ czy stare konta zosta≈Çy usuniƒôte
SELECT 'Stare konta (powinno byƒá 0):' AS check_type, COUNT(*) as count
FROM profiles 
WHERE email IN ('employer@test.nl', 'admin@zzp.nl', 'worker@test.nl')

UNION ALL

-- Sprawd≈∫ czy nowy admin istnieje
SELECT 'Nowy admin (powinno byƒá 1):' AS check_type, COUNT(*) as count
FROM profiles 
WHERE email LIKE '%zzpwerkplaats.nl' AND role = 'admin';

-- Wy≈õwietl wszystkich u≈ºytkownik√≥w (do weryfikacji)
SELECT 
  id,
  email,
  full_name,
  role,
  created_at
FROM profiles
ORDER BY created_at DESC;

-- =====================================================
-- NOTATKI
-- =====================================================
-- Po wykonaniu tego skryptu:
-- 1. Stare konta testowe (employer@test.nl, worker@test.nl, admin@zzp.nl) ZNIKNƒÑ
-- 2. Nowe konto admina bƒôdzie utworzone (je≈õli u≈ºyjesz funkcji lub Supabase Dashboard)
-- 3. Nowe konta pracodawcy i pracownika MUSISZ utworzyƒá przez formularz rejestracji:
--    - Pracodawca: http://localhost:3003/register/employer
--    - Pracownik: http://localhost:3003/register/worker

-- BEZPIECZE≈ÉSTWO:
-- - Admin powinien mieƒá SILNE has≈Ço (min 12 znak√≥w, du≈ºe/ma≈Çe litery, cyfry, znaki specjalne)
-- - Email admina powinien byƒá prawdziwy (nie testowy)
-- - Po utworzeniu admina, zmie≈Ñ has≈Ço przez interfejs Supabase

-- =====================================================
-- SUKCES!
-- =====================================================
DO $$
BEGIN
  RAISE NOTICE '‚úÖ Skrypt wykonany!';
  RAISE NOTICE 'üìù Nastƒôpne kroki:';
  RAISE NOTICE '1. Utw√≥rz konto admina przez Supabase Dashboard (Authentication ‚Üí Add User)';
  RAISE NOTICE '2. Zarejestruj pracodawcƒô przez: http://localhost:3003/register/employer';
  RAISE NOTICE '3. Zarejestruj pracownika przez: http://localhost:3003/register/worker';
END $$;
